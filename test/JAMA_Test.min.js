var TestMatrix=function(){function q(){}return q.runJAMATest=function(){var e,t,n,i,r,a,c,s,o,u,l,x,y,_=0,d=0,f=[1,2,3,4,5,6,7,8,9,10,11,12],g=[[1,4,7,10],[2,5,8,11],[3,6,9,12]],M=[g[0].slice(),g[1].slice(),g[2].slice()],m=[[1,4,7],[2,5,8,11],[3,6,9,12]],h=[1,2],$=[1,3],p=[1,2,3],O=[1,2,4];q.print$java_lang_String("\nTesting constructors and constructor-like methods...\n");try{D=new Matrix(f,5),_=q.try_failure(_,"Catch invalid length in packed constructor... ","exception not thrown for invalid input")}catch(t){q.try_success("Catch invalid length in packed constructor... ",t.message)}try{d=(D=new Matrix(m)).get(0,4)}catch(t){null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&q.try_success("Catch ragged input to default constructor... ",t.message),null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException")&&(_=q.try_failure(_,"Catch ragged input to constructor... ","exception not thrown in construction...ArrayIndexOutOfBoundsException thrown later"))}try{d=(D=Matrix.constructWithCopy(m)).get(0,4)}catch(t){null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&q.try_success("Catch ragged input to constructWithCopy... ",t.message),null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException")&&(_=q.try_failure(_,"Catch ragged input to constructWithCopy... ","exception not thrown in construction...ArrayIndexOutOfBoundsException thrown later"))}D=new Matrix(f,3),d=(e=new Matrix(g)).get(0,0),g[0][0]=0,t=e.minus(D),g[0][0]=d,d=(e=Matrix.constructWithCopy(g)).get(0,0),g[0][0]=0,d-e.get(0,0)!=0?_=q.try_failure(_,"constructWithCopy... ","copy not effected... data visible outside"):q.try_success("constructWithCopy... ",""),g[0][0]=f[0],r=new Matrix([[1,0,0,0],[0,1,0,0],[0,0,1,0]]);try{q.check$Matrix$Matrix(r,Matrix.identity(3,4)),q.try_success("identity... ","")}catch(t){_=q.try_failure(_,"identity... ","identity Matrix not successfully created")}q.print$java_lang_String("\nTesting access methods...\n"),3!==(e=new Matrix(g)).getRowDimension()?_=q.try_failure(_,"getRowDimension... ",""):q.try_success("getRowDimension... ",""),4!==e.getColumnDimension()?_=q.try_failure(_,"getColumnDimension... ",""):q.try_success("getColumnDimension... ","");var A=(e=new Matrix(g)).getArray();A!==g?_=q.try_failure(_,"getArray... ",""):q.try_success("getArray... ",""),(A=e.getArrayCopy())===g&&(_=q.try_failure(_,"getArrayCopy... ","data not (deep) copied"));try{q.check$double_A_A$double_A_A(A,g),q.try_success("getArrayCopy... ","")}catch(t){_=q.try_failure(_,"getArrayCopy... ","data not successfully (deep) copied")}var v=e.getColumnPackedCopy();try{q.check$double_A$double_A(v,f),q.try_success("getColumnPackedCopy... ","")}catch(t){_=q.try_failure(_,"getColumnPackedCopy... ","data not successfully (deep) copied by columns")}v=e.getRowPackedCopy();try{q.check$double_A$double_A(v,[1,4,7,10,2,5,8,11,3,6,9,12]),q.try_success("getRowPackedCopy... ","")}catch(t){_=q.try_failure(_,"getRowPackedCopy... ","data not successfully (deep) copied by rows")}try{d=e.get(e.getRowDimension(),e.getColumnDimension()-1),_=q.try_failure(_,"get(int,int)... ","OutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{d=e.get(e.getRowDimension()-1,e.getColumnDimension()),_=q.try_failure(_,"get(int,int)... ","OutOfBoundsException expected but not thrown")}catch(t){q.try_success("get(int,int)... OutofBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"get(int,int)... ","OutOfBoundsException expected but not thrown"))}try{e.get(e.getRowDimension()-1,e.getColumnDimension()-1)!==g[e.getRowDimension()-1][e.getColumnDimension()-1]?_=q.try_failure(_,"get(int,int)... ","Matrix entry (i,j) not successfully retreived"):q.try_success("get(int,int)... ","")}catch(t){_=q.try_failure(_,"get(int,int)... ","Unexpected ArrayIndexOutOfBoundsException")}s=new Matrix([[5,8,11],[6,9,12]]);try{o=e.getMatrix$int$int$int$int(1,2+e.getRowDimension()+1,1,3),_=q.try_failure(_,"getMatrix(int,int,int,int)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{o=e.getMatrix$int$int$int$int(1,2,1,3+e.getColumnDimension()+1),_=q.try_failure(_,"getMatrix(int,int,int,int)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){q.try_success("getMatrix(int,int,int,int)... ArrayIndexOutOfBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"getMatrix(int,int,int,int)... ","ArrayIndexOutOfBoundsException expected but not thrown"))}try{o=e.getMatrix$int$int$int$int(1,2,1,3);try{q.check$Matrix$Matrix(s,o),q.try_success("getMatrix(int,int,int,int)... ","")}catch(t){_=q.try_failure(_,"getMatrix(int,int,int,int)... ","submatrix not successfully retreived")}}catch(t){_=q.try_failure(_,"getMatrix(int,int,int,int)... ","Unexpected ArrayIndexOutOfBoundsException")}try{o=e.getMatrix$int$int$int_A(1,2,O),_=q.try_failure(_,"getMatrix(int,int,int[])... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{o=e.getMatrix$int$int$int_A(1,2+e.getRowDimension()+1,p),_=q.try_failure(_,"getMatrix(int,int,int[])... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){q.try_success("getMatrix(int,int,int[])... ArrayIndexOutOfBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"getMatrix(int,int,int[])... ","ArrayIndexOutOfBoundsException expected but not thrown"))}try{o=e.getMatrix$int$int$int_A(1,2,p);try{q.check$Matrix$Matrix(s,o),q.try_success("getMatrix(int,int,int[])... ","")}catch(t){_=q.try_failure(_,"getMatrix(int,int,int[])... ","submatrix not successfully retreived")}}catch(t){_=q.try_failure(_,"getMatrix(int,int,int[])... ","Unexpected ArrayIndexOutOfBoundsException")}try{o=e.getMatrix$int_A$int$int($,1,3),_=q.try_failure(_,"getMatrix(int[],int,int)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{o=e.getMatrix$int_A$int$int(h,1,3+e.getColumnDimension()+1),_=q.try_failure(_,"getMatrix(int[],int,int)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){q.try_success("getMatrix(int[],int,int)... ArrayIndexOutOfBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"getMatrix(int[],int,int)... ","ArrayIndexOutOfBoundsException expected but not thrown"))}try{o=e.getMatrix$int_A$int$int(h,1,3);try{q.check$Matrix$Matrix(s,o),q.try_success("getMatrix(int[],int,int)... ","")}catch(t){_=q.try_failure(_,"getMatrix(int[],int,int)... ","submatrix not successfully retreived")}}catch(t){_=q.try_failure(_,"getMatrix(int[],int,int)... ","Unexpected ArrayIndexOutOfBoundsException")}try{o=e.getMatrix$int_A$int_A($,p),_=q.try_failure(_,"getMatrix(int[],int[])... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{o=e.getMatrix$int_A$int_A(h,O),_=q.try_failure(_,"getMatrix(int[],int[])... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){q.try_success("getMatrix(int[],int[])... ArrayIndexOutOfBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"getMatrix(int[],int[])... ","ArrayIndexOutOfBoundsException expected but not thrown"))}try{o=e.getMatrix$int_A$int_A(h,p);try{q.check$Matrix$Matrix(s,o),q.try_success("getMatrix(int[],int[])... ","")}catch(t){_=q.try_failure(_,"getMatrix(int[],int[])... ","submatrix not successfully retreived")}}catch(t){_=q.try_failure(_,"getMatrix(int[],int[])... ","Unexpected ArrayIndexOutOfBoundsException")}try{e.set(e.getRowDimension(),e.getColumnDimension()-1,0),_=q.try_failure(_,"set(int,int,double)... ","OutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{e.set(e.getRowDimension()-1,e.getColumnDimension(),0),_=q.try_failure(_,"set(int,int,double)... ","OutOfBoundsException expected but not thrown")}catch(t){q.try_success("set(int,int,double)... OutofBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"set(int,int,double)... ","OutOfBoundsException expected but not thrown"))}try{e.set(1,1,0),d=e.get(1,1);try{q.check$double$double(d,0),q.try_success("set(int,int,double)... ","")}catch(t){_=q.try_failure(_,"set(int,int,double)... ","Matrix element not successfully set")}}catch(t){_=q.try_failure(_,"set(int,int,double)... ","Unexpected ArrayIndexOutOfBoundsException")}o=new Matrix(2,3,0);try{e.setMatrix$int$int$int$int$Matrix(1,2+e.getRowDimension()+1,1,3,o),_=q.try_failure(_,"setMatrix(int,int,int,int,Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{e.setMatrix$int$int$int$int$Matrix(1,2,1,3+e.getColumnDimension()+1,o),_=q.try_failure(_,"setMatrix(int,int,int,int,Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){q.try_success("setMatrix(int,int,int,int,Matrix)... ArrayIndexOutOfBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"setMatrix(int,int,int,int,Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown"))}try{e.setMatrix$int$int$int$int$Matrix(1,2,1,3,o);try{q.check$Matrix$Matrix(o.minus(e.getMatrix$int$int$int$int(1,2,1,3)),o),q.try_success("setMatrix(int,int,int,int,Matrix)... ","")}catch(t){_=q.try_failure(_,"setMatrix(int,int,int,int,Matrix)... ","submatrix not successfully set")}e.setMatrix$int$int$int$int$Matrix(1,2,1,3,s)}catch(t){_=q.try_failure(_,"setMatrix(int,int,int,int,Matrix)... ","Unexpected ArrayIndexOutOfBoundsException")}try{e.setMatrix$int$int$int_A$Matrix(1,2+e.getRowDimension()+1,p,o),_=q.try_failure(_,"setMatrix(int,int,int[],Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{e.setMatrix$int$int$int_A$Matrix(1,2,O,o),_=q.try_failure(_,"setMatrix(int,int,int[],Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){q.try_success("setMatrix(int,int,int[],Matrix)... ArrayIndexOutOfBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"setMatrix(int,int,int[],Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown"))}try{e.setMatrix$int$int$int_A$Matrix(1,2,p,o);try{q.check$Matrix$Matrix(o.minus(e.getMatrix$int$int$int_A(1,2,p)),o),q.try_success("setMatrix(int,int,int[],Matrix)... ","")}catch(t){_=q.try_failure(_,"setMatrix(int,int,int[],Matrix)... ","submatrix not successfully set")}e.setMatrix$int$int$int$int$Matrix(1,2,1,3,s)}catch(t){_=q.try_failure(_,"setMatrix(int,int,int[],Matrix)... ","Unexpected ArrayIndexOutOfBoundsException")}try{e.setMatrix$int_A$int$int$Matrix(h,1,3+e.getColumnDimension()+1,o),_=q.try_failure(_,"setMatrix(int[],int,int,Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{e.setMatrix$int_A$int$int$Matrix($,1,3,o),_=q.try_failure(_,"setMatrix(int[],int,int,Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){q.try_success("setMatrix(int[],int,int,Matrix)... ArrayIndexOutOfBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"setMatrix(int[],int,int,Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown"))}try{e.setMatrix$int_A$int$int$Matrix(h,1,3,o);try{q.check$Matrix$Matrix(o.minus(e.getMatrix$int_A$int$int(h,1,3)),o),q.try_success("setMatrix(int[],int,int,Matrix)... ","")}catch(t){_=q.try_failure(_,"setMatrix(int[],int,int,Matrix)... ","submatrix not successfully set")}e.setMatrix$int$int$int$int$Matrix(1,2,1,3,s)}catch(t){_=q.try_failure(_,"setMatrix(int[],int,int,Matrix)... ","Unexpected ArrayIndexOutOfBoundsException")}try{e.setMatrix$int_A$int_A$Matrix(h,O,o),_=q.try_failure(_,"setMatrix(int[],int[],Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){if(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.ArrayIndexOutOfBoundsException"))try{e.setMatrix$int_A$int_A$Matrix($,p,o),_=q.try_failure(_,"setMatrix(int[],int[],Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown")}catch(t){q.try_success("setMatrix(int[],int[],Matrix)... ArrayIndexOutOfBoundsException... ","")}null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"setMatrix(int[],int[],Matrix)... ","ArrayIndexOutOfBoundsException expected but not thrown"))}try{e.setMatrix$int_A$int_A$Matrix(h,p,o);try{q.check$Matrix$Matrix(o.minus(e.getMatrix$int_A$int_A(h,p)),o),q.try_success("setMatrix(int[],int[],Matrix)... ","")}catch(t){_=q.try_failure(_,"setMatrix(int[],int[],Matrix)... ","submatrix not successfully set")}}catch(t){_=q.try_failure(_,"setMatrix(int[],int[],Matrix)... ","Unexpected ArrayIndexOutOfBoundsException")}q.print$java_lang_String("\nTesting array-like methods...\n"),a=new Matrix(f,4),D=b=Matrix.random(D.getRowDimension(),D.getColumnDimension());try{a=D.minus(a),_=q.try_failure(_,"minus conformance check... ","nonconformance not raised")}catch(t){q.try_success("minus conformance check... ","")}0!==D.minus(b).norm1()?_=q.try_failure(_,"minus... ","(difference of identical Matrices is nonzero,\nSubsequent use of minus should be suspect)"):q.try_success("minus... ",""),(D=b.copy()).minusEquals(b),n=new Matrix(D.getRowDimension(),D.getColumnDimension());try{D.minusEquals(a),_=q.try_failure(_,"minusEquals conformance check... ","nonconformance not raised")}catch(t){q.try_success("minusEquals conformance check... ","")}0!==D.minus(n).norm1()?_=q.try_failure(_,"minusEquals... ","(difference of identical Matrices is nonzero,\nSubsequent use of minus should be suspect)"):q.try_success("minusEquals... ",""),D=b.copy(),e=Matrix.random(D.getRowDimension(),D.getColumnDimension()),t=D.minus(e);try{a=D.plus(a),_=q.try_failure(_,"plus conformance check... ","nonconformance not raised")}catch(t){q.try_success("plus conformance check... ","")}try{q.check$Matrix$Matrix(t.plus(e),D),q.try_success("plus... ","")}catch(t){_=q.try_failure(_,"plus... ","(C = A - B, but C + B != A)")}(t=D.minus(e)).plusEquals(e);try{D.plusEquals(a),_=q.try_failure(_,"plusEquals conformance check... ","nonconformance not raised")}catch(t){q.try_success("plusEquals conformance check... ","")}try{q.check$Matrix$Matrix(t,D),q.try_success("plusEquals... ","")}catch(t){_=q.try_failure(_,"plusEquals... ","(C = A - B, but C = C + B != A)")}D=b.uminus();try{q.check$Matrix$Matrix(D.plus(b),n),q.try_success("uminus... ","")}catch(t){_=q.try_failure(_,"uminus... ","(-A + A != zeros)")}D=b.copy(),i=new Matrix(D.getRowDimension(),D.getColumnDimension(),1),t=D.arrayLeftDivide(b);try{a=D.arrayLeftDivide(a),_=q.try_failure(_,"arrayLeftDivide conformance check... ","nonconformance not raised")}catch(t){q.try_success("arrayLeftDivide conformance check... ","")}try{q.check$Matrix$Matrix(t,i),q.try_success("arrayLeftDivide... ","")}catch(t){_=q.try_failure(_,"arrayLeftDivide... ","(M.\\M != ones)")}try{D.arrayLeftDivideEquals(a),_=q.try_failure(_,"arrayLeftDivideEquals conformance check... ","nonconformance not raised")}catch(t){q.try_success("arrayLeftDivideEquals conformance check... ","")}D.arrayLeftDivideEquals(b);try{q.check$Matrix$Matrix(D,i),q.try_success("arrayLeftDivideEquals... ","")}catch(t){_=q.try_failure(_,"arrayLeftDivideEquals... ","(M.\\M != ones)")}D=b.copy();try{D.arrayRightDivide(a),_=q.try_failure(_,"arrayRightDivide conformance check... ","nonconformance not raised")}catch(t){q.try_success("arrayRightDivide conformance check... ","")}t=D.arrayRightDivide(b);try{q.check$Matrix$Matrix(t,i),q.try_success("arrayRightDivide... ","")}catch(t){_=q.try_failure(_,"arrayRightDivide... ","(M./M != ones)")}try{D.arrayRightDivideEquals(a),_=q.try_failure(_,"arrayRightDivideEquals conformance check... ","nonconformance not raised")}catch(t){q.try_success("arrayRightDivideEquals conformance check... ","")}D.arrayRightDivideEquals(b);try{q.check$Matrix$Matrix(D,i),q.try_success("arrayRightDivideEquals... ","")}catch(t){_=q.try_failure(_,"arrayRightDivideEquals... ","(M./M != ones)")}D=b.copy(),e=Matrix.random(D.getRowDimension(),D.getColumnDimension());try{a=D.arrayTimes(a),_=q.try_failure(_,"arrayTimes conformance check... ","nonconformance not raised")}catch(t){q.try_success("arrayTimes conformance check... ","")}t=D.arrayTimes(e);try{q.check$Matrix$Matrix(t.arrayRightDivideEquals(e),D),q.try_success("arrayTimes... ","")}catch(t){_=q.try_failure(_,"arrayTimes... ","(A = R, C = A.*B, but C./B != A)")}try{D.arrayTimesEquals(a),_=q.try_failure(_,"arrayTimesEquals conformance check... ","nonconformance not raised")}catch(t){q.try_success("arrayTimesEquals conformance check... ","")}D.arrayTimesEquals(e);try{q.check$Matrix$Matrix(D.arrayRightDivideEquals(e),b),q.try_success("arrayTimesEquals... ","")}catch(t){_=q.try_failure(_,"arrayTimesEquals... ","(A = R, A = A.*B, but A./B != R)")}q.print$java_lang_String("\nTesting I/O methods...\n"),q.print$java_lang_String("\nTesting linear algebra methods...\n"),D=new Matrix(f,3),new Matrix([[1,2,3],[4,5,6],[7,8,9],[10,11,12]]),u=D.transpose();try{q.check$Matrix$Matrix(D.transpose(),u),q.try_success("transpose...","")}catch(t){_=q.try_failure(_,"transpose()...","transpose unsuccessful")}D.transpose();try{q.check$double$double(D.norm1(),33),q.try_success("norm1...","")}catch(t){_=q.try_failure(_,"norm1()...","incorrect norm calculation")}try{q.check$double$double(D.normInf(),30),q.try_success("normInf()...","")}catch(t){_=q.try_failure(_,"normInf()...","incorrect norm calculation")}try{q.check$double$double(D.normF(),Math.sqrt(650)),q.try_success("normF...","")}catch(t){_=q.try_failure(_,"normF()...","incorrect norm calculation")}try{q.check$double$double(D.trace(),15),q.try_success("trace()...","")}catch(t){_=q.try_failure(_,"trace()...","incorrect trace calculation")}try{q.check$double$double(D.getMatrix$int$int$int$int(0,D.getRowDimension()-1,0,D.getRowDimension()-1).det(),0),q.try_success("det()...","")}catch(t){_=q.try_failure(_,"det()...","incorrect determinant calculation")}l=new Matrix([[166,188,210],[188,214,240],[210,240,270]]);try{q.check$Matrix$Matrix(D.times$Matrix(D.transpose()),l),q.try_success("times(Matrix)...","")}catch(t){_=q.try_failure(_,"times(Matrix)...","incorrect Matrix-Matrix product calculation")}try{q.check$Matrix$Matrix(D.times$double(0),n),q.try_success("times(double)...","")}catch(t){_=q.try_failure(_,"times(double)...","incorrect Matrix-scalar product calculation")}var E=(D=new Matrix(f,4)).qr(),b=E.getR();try{q.check$Matrix$Matrix(D,E.getQ().times$Matrix(b)),q.try_success("QRDecomposition...","")}catch(t){_=q.try_failure(_,"QRDecomposition...","incorrect QR decomposition calculation")}var w=D.svd();try{q.check$Matrix$Matrix(D,w.getU().times$Matrix(w.getS().times$Matrix(w.getV().transpose()))),q.try_success("SingularValueDecomposition...","")}catch(t){_=q.try_failure(_,"SingularValueDecomposition...","incorrect singular value decomposition calculation")}x=new Matrix(M);try{q.check$double$double(x.rank(),Math.min(x.getRowDimension(),x.getColumnDimension())-1),q.try_success("rank()...","")}catch(t){_=q.try_failure(_,"rank()...","incorrect rank calculation")}var k=(w=(e=new Matrix([[1,3],[7,9]])).svd()).getSingularValues();try{q.check$double$double(e.cond(),k[0]/k[Math.min(e.getRowDimension(),e.getColumnDimension())-1]),q.try_success("cond()...","")}catch(t){_=q.try_failure(_,"cond()...","incorrect condition number calculation")}var D,I=D.getColumnDimension();(D=D.getMatrix$int$int$int$int(0,I-1,0,I-1)).set(0,0,0);var B=D.lu();try{q.check$Matrix$Matrix(D.getMatrix$int_A$int$int(B.getPivot(),0,I-1),B.getL().times$Matrix(B.getU())),q.try_success("LUDecomposition...","")}catch(t){_=q.try_failure(_,"LUDecomposition...","incorrect LU decomposition calculation")}c=D.inverse();try{q.check$Matrix$Matrix(D.times$Matrix(c),Matrix.identity(3,3)),q.try_success("inverse()...","")}catch(t){_=q.try_failure(_,"inverse()...","incorrect inverse calculation")}i=new Matrix(s.getRowDimension(),1,1),y=new Matrix([[13],[15]]),l=s.getMatrix$int$int$int$int(0,s.getRowDimension()-1,0,s.getRowDimension()-1);try{q.check$Matrix$Matrix(l.solve(y),i),q.try_success("solve()...","")}catch(t){null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.IllegalArgumentException")&&(_=q.try_failure(_,"solve()...",t.message)),(null!=t&&t.__classes&&0<=t.__classes.indexOf("java.lang.RuntimeException")||null!=t&&t instanceof Error)&&(_=q.try_failure(_,"solve()...",t.message))}var M=(D=new Matrix([[4,1,1],[1,2,3],[1,3,6]])).chol(),j=M.getL();try{q.check$Matrix$Matrix(D,j.times$Matrix(j.transpose())),q.try_success("CholeskyDecomposition...","")}catch(t){_=q.try_failure(_,"CholeskyDecomposition...","incorrect Cholesky decomposition calculation")}c=M.solve(Matrix.identity(3,3));try{q.check$Matrix$Matrix(D.times$Matrix(c),Matrix.identity(3,3)),q.try_success("CholeskyDecomposition solve()...","")}catch(t){_=q.try_failure(_,"CholeskyDecomposition solve()...","incorrect Choleskydecomposition solve calculation")}var M=D.eig(),C=M.getD(),R=M.getV();try{q.check$Matrix$Matrix(D.times$Matrix(R),R.times$Matrix(C)),q.try_success("EigenvalueDecomposition (symmetric)...","")}catch(t){_=q.try_failure(_,"EigenvalueDecomposition (symmetric)...","incorrect symmetric Eigenvalue decomposition calculation")}C=(M=(D=new Matrix([[0,1,0,0],[1,0,2e-7,0],[0,-2e-7,0,1],[0,0,1,0]])).eig()).getD(),R=M.getV();try{q.check$Matrix$Matrix(D.times$Matrix(R),R.times$Matrix(C)),q.try_success("EigenvalueDecomposition (nonsymmetric)...","")}catch(t){_=q.try_failure(_,"EigenvalueDecomposition (nonsymmetric)...","incorrect nonsymmetric Eigenvalue decomposition calculation")}try{q.print$java_lang_String("\nTesting Eigenvalue; If this hangs, we've failed\n");new Matrix([[0,0,0,0,0],[0,0,0,0,1],[0,0,0,1,0],[1,1,0,0,1],[1,0,1,0,1]]).eig();q.try_success("EigenvalueDecomposition (hang)...","")}catch(t){_=q.try_failure(_,"EigenvalueDecomposition (hang)...","incorrect termination")}q.print$java_lang_String("\nTestMatrix completed.\n"),q.print$java_lang_String("Total errors reported: "+_+"\n"),q.print$java_lang_String("Total warnings reported: 0\n")},q.check$double$double=function(t,e){var n,i,r=Math.pow(2,-52);if((n=0===t,i=Math.abs(e)<10*r,!n||!i)&&(n=0===e,i=Math.abs(t)<10*r,(!n||!i)&&Math.abs(t-e)>10*r*Math.max(Math.abs(t),Math.abs(e))))throw Object.defineProperty(new Error("The difference x-y is too large: x = "+t+"  y = "+e),"__classes",{configurable:!0,value:["java.lang.Throwable","java.lang.Object","java.lang.RuntimeException","java.lang.Exception"]})},q.check$double_A$double_A=function(t,e){if(t.length!==e.length)throw Object.defineProperty(new Error("Attempt to compare vectors of different lengths"),"__classes",{configurable:!0,value:["java.lang.Throwable","java.lang.Object","java.lang.RuntimeException","java.lang.Exception"]});for(var n=0;n<t.length;n++)q.check$double$double(t[n],e[n])},q.check=function(t,e){if((null!=t&&t instanceof Array&&(0==t.length||null==t[0]||"number"==typeof t[0])||null===t)&&(null!=e&&e instanceof Array&&(0==e.length||null==e[0]||"number"==typeof e[0])||null===e))return q.check$double_A$double_A(t,e);if((null!=t&&t instanceof Array&&(0==t.length||null==t[0]||t[0]instanceof Array)||null===t)&&(null!=e&&e instanceof Array&&(0==e.length||null==e[0]||e[0]instanceof Array)||null===e))return q.check$double_A_A$double_A_A(t,e);if((null!=t&&t instanceof Matrix||null===t)&&(null!=e&&e instanceof Matrix||null===e))return q.check$Matrix$Matrix(t,e);if("number"!=typeof t&&null!==t||"number"!=typeof e&&null!==e)throw new Error("invalid overload");return q.check$double$double(t,e)},q.check$double_A_A$double_A_A=function(t,e){t=new Matrix(t),e=new Matrix(e);q.check$Matrix$Matrix(t,e)},q.check$Matrix$Matrix=function(t,e){var n,i,r=Math.pow(2,-52);if((n=0===t.norm1(),i=e.norm1()<10*r,!n||!i)&&(n=0===e.norm1(),i=t.norm1()<10*r,(!n||!i)&&t.minus(e).norm1()>1e3*r*Math.max(t.norm1(),e.norm1())))throw Object.defineProperty(new Error("The norm of (X-Y) is too large: "+t.minus(e).norm1()),"__classes",{configurable:!0,value:["java.lang.Throwable","java.lang.Object","java.lang.RuntimeException","java.lang.Exception"]})},q.print$java_lang_String=function(t){console.info(t)},q.try_success=function(t,e){q.print$java_lang_String(">    "+t+"success\n"),""!==e&&q.print$java_lang_String(">      Message: "+e+"\n")},q.try_failure=function(t,e,n){return q.print$java_lang_String(">    "+e+"*** failure ***\n>      Message: "+n+"\n"),++t},q.try_warning=function(t,e,n){return q.print$java_lang_String(">    "+e+"*** warning ***\n>      Message: "+n+"\n"),++t},q.print$double_A$int$int=function(t,e,n){console.info("\n"),new Matrix(t,1).print(e,n),q.print$java_lang_String("\n")},q.print=function(t,e,n){if(!(null!=t&&t instanceof Array&&(0==t.length||null==t[0]||"number"==typeof t[0])||null===t)||"number"!=typeof e&&null!==e||"number"!=typeof n&&null!==n){if("string"!=typeof t&&null!==t||void 0!==e||void 0!==n)throw new Error("invalid overload");return q.print$java_lang_String(t)}return q.print$double_A$int$int(t,e,n)},q}();TestMatrix.__class="TestMatrix";